{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/albums/albums.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Image } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AlbumsService from \"../services/albumsService\";\nimport SongsForAnAlbum from \"../songs/songsForAnAlbum\";\nimport { userContext } from \"../utils/types\";\nimport CreateAlbum from \"./createAlbum\";\nimport UpdateAlbum from \"./updateAlbum\";\n\nconst AlbumsList = () => {\n  _s();\n\n  const [Albums, setAlbums] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [updateModal, setUpdateModal] = useState(false);\n  const {\n    userId,\n    admin,\n    token\n  } = useContext(userContext);\n\n  function getAlbums() {\n    AlbumsService.getAlbums().then(res => {\n      const Albums = res.data;\n      setAlbums(Albums);\n    });\n  }\n\n  function deleteID(albumID) {\n    AlbumsService.deleteAlbum(albumID.toString(), token).then(res => {\n      getAlbums();\n    });\n  }\n\n  useEffect(() => {\n    userId && getAlbums();\n  }, [userId]);\n  return userId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 55,\n        marginTop: 50,\n        color: \"var(--pink)\"\n      },\n      children: \"Albums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        marginTop: \"1%\"\n      },\n      children: Albums.map(album => {\n        var _album$artist, _album$releaseDate;\n\n        return /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: 300,\n            marginRight: \"1%\",\n            marginBottom: \"1%\",\n            boxShadow: \"0px 4px 100px -64px rgba(0,0,0,0.35)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 500\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: 34\n              },\n              children: album.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              width: 200,\n              src: `${album.pictureUri}`,\n              style: {\n                marginBottom: \"2%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: \"var(--blue)\",\n                fontSize: 16,\n                marginBottom: \"5%\"\n              },\n              children: (_album$artist = album.artist) === null || _album$artist === void 0 ? void 0 : _album$artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_album$releaseDate = album.releaseDate) === null || _album$releaseDate === void 0 ? void 0 : _album$releaseDate.slice(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SongsForAnAlbum, {\n              album: album\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), admin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              shape: \"round\",\n              onClick: () => {\n                setUpdateModal(true);\n              },\n              children: \"Modifier l'album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              title: \"Modifier l'album\",\n              visible: updateModal,\n              onOk: () => {\n                setUpdateModal(false);\n                album.id && AlbumsService.getAlbumById(album.id.toString());\n              },\n              onCancel: () => setUpdateModal(false),\n              children: /*#__PURE__*/_jsxDEV(UpdateAlbum, {\n                data: album\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              shape: \"round\",\n              onClick: () => {\n                album.id && deleteID(album.id);\n              },\n              children: \"Supprimer l'album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), admin === \"null\" ? null : /*#__PURE__*/_jsxDEV(Button, {\n      shape: \"round\",\n      type: \"primary\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Ajouter un album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Ajouter un album\",\n      visible: visible,\n      onOk: () => {\n        setVisible(false);\n        getAlbums();\n      },\n      onCancel: () => setVisible(false),\n      children: /*#__PURE__*/_jsxDEV(CreateAlbum, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Connexion requise\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlbumsList, \"Dr2dfkQ57mU5rIXn7e3blKJxLUs=\");\n\n_c = AlbumsList;\nexport default AlbumsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumsList\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/albums/albums.tsx"],"names":["Button","Card","Image","Modal","React","useContext","useEffect","useState","AlbumsService","SongsForAnAlbum","userContext","CreateAlbum","UpdateAlbum","AlbumsList","Albums","setAlbums","visible","setVisible","updateModal","setUpdateModal","userId","admin","token","getAlbums","then","res","data","deleteID","albumID","deleteAlbum","toString","fontWeight","fontSize","marginTop","color","display","flexWrap","map","album","width","marginRight","marginBottom","boxShadow","height","name","pictureUri","artist","releaseDate","slice","id","getAlbumById"],"mappings":"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","sourcesContent":["import { Button, Card, Image } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport React, { FC, useContext, useEffect, useState } from \"react\";\nimport AlbumsService from \"../services/albumsService\";\nimport SongsForAnAlbum from \"../songs/songsForAnAlbum\";\nimport { Album, userContext } from \"../utils/types\";\nimport CreateAlbum from \"./createAlbum\";\nimport UpdateAlbum from \"./updateAlbum\";\n\ninterface AlbumsProps {}\n\nconst AlbumsList: FC<AlbumsProps> = () => {\n  const [Albums, setAlbums] = useState<Album[]>([]);\n  const [visible, setVisible] = useState<boolean>(false);\n  const [updateModal, setUpdateModal] = useState<boolean>(false);\n  const { userId, admin, token } = useContext(userContext);\n\n  function getAlbums() {\n    AlbumsService.getAlbums().then((res) => {\n      const Albums = res.data;\n      setAlbums(Albums);\n    });\n  }\n\n  function deleteID(albumID: number) {\n    AlbumsService.deleteAlbum(albumID.toString(), token).then((res) => {\n      getAlbums();\n    });\n  }\n\n  useEffect(() => {\n    userId && getAlbums();\n  }, [userId]);\n\n  return userId ? (\n    <>\n      <h1\n        style={{\n          fontWeight: \"bold\",\n          fontSize: 55,\n          marginTop: 50,\n          color: \"var(--pink)\",\n        }}\n      >\n        Albums\n      </h1>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"1%\" }}>\n        {Albums.map((album) => (\n          <Card\n            style={{\n              width: 300,\n              marginRight: \"1%\",\n              marginBottom: \"1%\",\n              boxShadow: \"0px 4px 100px -64px rgba(0,0,0,0.35)\",\n            }}\n          >\n            <div style={{ height: 500 }}>\n              <h1 style={{ fontWeight: \"bold\", fontSize: 34 }}>{album.name}</h1>\n              <Image\n                width={200}\n                src={`${album.pictureUri}`}\n                style={{ marginBottom: \"2%\" }}\n              />\n              <h2\n                style={{\n                  color: \"var(--blue)\",\n                  fontSize: 16,\n                  marginBottom: \"5%\",\n                }}\n              >\n                {album.artist?.name}\n              </h2>\n\n              <p>{album.releaseDate?.slice(0, 10)}</p>\n              <SongsForAnAlbum album={album} />\n            </div>\n\n            {admin && (\n              <>\n                <Button\n                  shape=\"round\"\n                  onClick={() => {\n                    setUpdateModal(true);\n                  }}\n                >\n                  Modifier l'album\n                </Button>\n                <Modal\n                  title=\"Modifier l'album\"\n                  visible={updateModal}\n                  onOk={() => {\n                    setUpdateModal(false);\n                    album.id && AlbumsService.getAlbumById(album.id.toString());\n                  }}\n                  onCancel={() => setUpdateModal(false)}\n                >\n                  <UpdateAlbum data={album} />\n                </Modal>\n                <Button\n                  shape=\"round\"\n                  onClick={() => {\n                    album.id && deleteID(album.id);\n                  }}\n                >\n                  Supprimer l'album\n                </Button>\n              </>\n            )}\n          </Card>\n        ))}\n      </div>\n\n      {admin === \"null\" ? null : (\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          onClick={() => {\n            setVisible(true);\n          }}\n        >\n          Ajouter un album\n        </Button>\n      )}\n      <Modal\n        title=\"Ajouter un album\"\n        visible={visible}\n        onOk={() => {\n          setVisible(false);\n          getAlbums();\n        }}\n        onCancel={() => setVisible(false)}\n      >\n        <CreateAlbum />\n      </Modal>\n    </>\n  ) : (\n    <h1>Connexion requise</h1>\n  );\n};\nexport default AlbumsList;\n"]},"metadata":{},"sourceType":"module"}