{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/artists/updateArtist.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from \"antd\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport ArtistService from \"../services/artistService\";\nimport { userContext } from \"../utils/types\";\n\nconst UpdateArtist = ({\n  artist\n}) => {\n  _s();\n\n  const [UpdateArtist, setUpdateArtist] = useState();\n  const [ready, setReady] = useState(false);\n  const {\n    userId,\n    admin,\n    token\n  } = useContext(userContext);\n  useEffect(() => {\n    if (ready) {\n      ArtistService.updateArtist(UpdateArtist, artist.id, token);\n      setUpdateArtist(undefined);\n      setReady(false);\n    }\n  }, [admin, userId, UpdateArtist, ready, token, artist.id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    onFinish: e => {\n      setUpdateArtist({ ...UpdateArtist,\n        name: e.name,\n        imageUri: e.imageUri\n      });\n      setReady(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Nom de l'artiste\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Nom de l'artiste\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Lien vers l'image\",\n      name: \"imageUri\",\n      rules: [{\n        required: true,\n        message: \"Lien vers l'image\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: artist.imageUri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        htmlType: \"submit\",\n        children: \"Confirmer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateArtist, \"21OhNMTwRBztdZx1840iw0CmJu8=\");\n\n_c = UpdateArtist;\nexport default UpdateArtist;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateArtist\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/artists/updateArtist.tsx"],"names":["Button","Form","Input","React","useEffect","useState","useContext","ArtistService","userContext","UpdateArtist","artist","setUpdateArtist","ready","setReady","userId","admin","token","updateArtist","id","undefined","e","name","imageUri","required","message"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AA8BA,MAAMC,YAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC9C,QAAM,CAACD,YAAD,EAAeE,eAAf,IAAkCN,QAAQ,EAAhD;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAU,KAAV,CAAlC;AACA,QAAM;AAAES,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA2BV,UAAU,CAACE,WAAD,CAA3C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,KAAJ,EAAW;AACTL,MAAAA,aAAa,CAACU,YAAd,CAA2BR,YAA3B,EAAyCC,MAAM,CAACQ,EAAhD,EAAoDF,KAApD;AACAL,MAAAA,eAAe,CAACQ,SAAD,CAAf;AACAN,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GANQ,EAMN,CAACE,KAAD,EAAQD,MAAR,EAAgBL,YAAhB,EAA8BG,KAA9B,EAAqCI,KAArC,EAA4CN,MAAM,CAACQ,EAAnD,CANM,CAAT;AAQA,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAGE,CAAD,IAAO;AACfT,MAAAA,eAAe,CAAC,EACd,GAAGF,YADW;AAEdY,QAAAA,IAAI,EAAED,CAAC,CAACC,IAFM;AAGdC,QAAAA,QAAQ,EAAEF,CAAC,CAACE;AAHE,OAAD,CAAf;AAKAT,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KATH;AAAA,4BAWE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,CAAC;AAAEU,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHT;AAAA,6BAKE,QAAC,KAAD;AAAO,QAAA,WAAW,EAAEd,MAAM,CAACW;AAA3B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,mBADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,CAAC;AAAEE,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHT;AAAA,6BAKE,QAAC,KAAD;AAAO,QAAA,WAAW,EAAEd,MAAM,CAACY;AAA3B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAnBF,eA2BE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAC,OAA7B;AAAqC,QAAA,QAAQ,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAhDD;;GAAMb,Y;;KAAAA,Y;AAkDN,eAAeA,YAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport React, { FC, useEffect, useState, useContext } from \"react\";\nimport ArtistService from \"../services/artistService\";\nimport { userContext } from \"../utils/types\";\n\ntype Song = {\n  id: number;\n  duration?: string;\n  name?: string;\n  artist?: Artist;\n  albums?: Album[];\n};\n\ntype Album = {\n  id: number;\n  name?: string;\n  pictureUri?: string;\n  artist?: Artist;\n  songs?: Song;\n  releaseDate?: string;\n};\n\ntype Artist = {\n  id?: number;\n  name?: string;\n  imageUri?: string;\n  albums?: Album;\n};\n\ninterface Props {\n  artist: any;\n}\n\nconst UpdateArtist: FC<Props> = ({ artist }) => {\n  const [UpdateArtist, setUpdateArtist] = useState<Artist>();\n  const [ready, setReady] = useState<boolean>(false);\n  const { userId, admin, token } = useContext(userContext);\n\n  useEffect(() => {\n    if (ready) {\n      ArtistService.updateArtist(UpdateArtist, artist.id, token);\n      setUpdateArtist(undefined);\n      setReady(false);\n    }\n  }, [admin, userId, UpdateArtist, ready, token, artist.id]);\n\n  return (\n    <Form\n      name=\"basic\"\n      onFinish={(e) => {\n        setUpdateArtist({\n          ...UpdateArtist,\n          name: e.name,\n          imageUri: e.imageUri,\n        });\n        setReady(true);\n      }}\n    >\n      <Form.Item\n        label=\"Nom de l'artiste\"\n        name=\"name\"\n        rules={[{ required: true, message: \"Nom de l'artiste\" }]}\n      >\n        <Input placeholder={artist.name} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Lien vers l'image\"\n        name=\"imageUri\"\n        rules={[{ required: true, message: \"Lien vers l'image\" }]}\n      >\n        <Input placeholder={artist.imageUri} />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\n          Confirmer\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default UpdateArtist;\n"]},"metadata":{},"sourceType":"module"}