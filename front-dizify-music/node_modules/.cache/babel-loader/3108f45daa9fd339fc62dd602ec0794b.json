{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/songs/addSongToPlaylist.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, message, Select } from \"antd\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport playlistService from \"../services/playlistService\";\nimport { userContext } from \"../utils/types\";\n\nconst AddSongToPlaylist = songId => {\n  _s();\n\n  const {\n    userId\n  } = useContext(userContext);\n  const [Playlists, setPlaylists] = useState([]);\n  const [playlistChoosed, setPlaylistChoosed] = useState();\n  useEffect(() => {\n    playlistService.getPlaylistsByUser(userId).then(res => {\n      const playlistRes = res.data;\n      setPlaylists(playlistRes);\n    });\n  }, []);\n\n  function handleChange(playlistId) {\n    setPlaylistChoosed(playlistId);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    onFinish: e => {\n      playlistService.addSongToPlaylist(playlistChoosed, songId.songId);\n      message.success(\"Chanson ajoutée à la playlist ! \");\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Playlist\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        onChange: handleChange,\n        children: Playlists.map((playlist, i) => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: playlist.id,\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        shape: \"round\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddSongToPlaylist, \"yPyOqa7XqVHOQnqGM5o7AGn3xyU=\");\n\n_c = AddSongToPlaylist;\nexport default AddSongToPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSongToPlaylist\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/songs/addSongToPlaylist.tsx"],"names":["Button","Form","message","Select","React","useContext","useEffect","useState","playlistService","userContext","AddSongToPlaylist","songId","userId","Playlists","setPlaylists","playlistChoosed","setPlaylistChoosed","getPlaylistsByUser","then","res","playlistRes","data","handleChange","playlistId","e","addSongToPlaylist","success","map","playlist","i","id","name"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,MAAhC,QAA8C,MAA9C;AACA,OAAOC,KAAP,IAAoBC,UAApB,EAAgCC,SAAhC,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAAmBC,WAAnB,QAAsC,gBAAtC;;AAMA,MAAMC,iBAA6C,GAAIC,MAAD,IAAY;AAAA;;AAChE,QAAM;AAAEC,IAAAA;AAAF,MAAaP,UAAU,CAACI,WAAD,CAA7B;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAa,EAAb,CAA1C;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,EAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,eAAe,CAACS,kBAAhB,CAAmCL,MAAnC,EAA2CM,IAA3C,CAAiDC,GAAD,IAAS;AACvD,YAAMC,WAAW,GAAGD,GAAG,CAACE,IAAxB;AACAP,MAAAA,YAAY,CAACM,WAAD,CAAZ;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,WAASE,YAAT,CAAsBC,UAAtB,EAA0C;AACxCP,IAAAA,kBAAkB,CAACO,UAAD,CAAlB;AACD;;AAED,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACfhB,MAAAA,eAAe,CAACiB,iBAAhB,CAAkCV,eAAlC,EAAmDJ,MAAM,CAACA,MAA1D;AACAT,MAAAA,OAAO,CAACwB,OAAR,CAAgB,kCAAhB;AACD,KALH;AAAA,4BAOE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEJ,YAAlB;AAAA,kBACGT,SAAS,CAACc,GAAV,CAAc,CAACC,QAAD,EAAWC,CAAX,kBACb,QAAC,MAAD,CAAQ,MAAR;AAAe,UAAA,KAAK,EAAED,QAAQ,CAACE,EAA/B;AAAA,oBAAqCF,QAAQ,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAcE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,IAAI,EAAC,SAA3B;AAAqC,QAAA,QAAQ,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAtCD;;GAAMrB,iB;;KAAAA,iB;AAwCN,eAAeA,iBAAf","sourcesContent":["import { Button, Form, message, Select } from \"antd\";\nimport React, { FC, useContext, useEffect, useState } from \"react\";\nimport playlistService from \"../services/playlistService\";\nimport { Playlist, userContext } from \"../utils/types\";\n\ninterface AddSongToPlaylistProps {\n  songId: number | undefined;\n}\n\nconst AddSongToPlaylist: FC<AddSongToPlaylistProps> = (songId) => {\n  const { userId } = useContext(userContext);\n  const [Playlists, setPlaylists] = useState<Playlist[]>([]);\n  const [playlistChoosed, setPlaylistChoosed] = useState<number>();\n\n  useEffect(() => {\n    playlistService.getPlaylistsByUser(userId).then((res) => {\n      const playlistRes = res.data;\n      setPlaylists(playlistRes);\n    });\n  }, []);\n\n  function handleChange(playlistId: number) {\n    setPlaylistChoosed(playlistId);\n  }\n\n  return (\n    <Form\n      name=\"basic\"\n      onFinish={(e) => {\n        playlistService.addSongToPlaylist(playlistChoosed, songId.songId);\n        message.success(\"Chanson ajoutée à la playlist ! \");\n      }}\n    >\n      <Form.Item label=\"Playlist\">\n        <Select onChange={handleChange}>\n          {Playlists.map((playlist, i) => (\n            <Select.Option value={playlist.id!}>{playlist.name}</Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item>\n        <Button shape=\"round\" type=\"primary\" htmlType=\"submit\">\n          Ajouter\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AddSongToPlaylist;\n"]},"metadata":{},"sourceType":"module"}