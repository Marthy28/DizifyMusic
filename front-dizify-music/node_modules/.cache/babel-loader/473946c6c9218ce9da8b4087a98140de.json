{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/songs/createSong.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from \"antd\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport songsService from \"../services/songsService\";\nimport { userContext } from \"../utils/types\";\n\nconst CreateSong = album => {\n  _s();\n\n  var _album$album2;\n\n  const [newSong, setNewSong] = useState();\n  const [ready, setReady] = useState(false);\n  const {\n    userId,\n    admin,\n    token\n  } = useContext(userContext);\n  useEffect(() => {\n    var _album$album, _album$album$artist;\n\n    if (ready && userId && admin && ((_album$album = album.album) === null || _album$album === void 0 ? void 0 : (_album$album$artist = _album$album.artist) === null || _album$album$artist === void 0 ? void 0 : _album$album$artist.id)) {\n      songsService.createSong(album.album.artist.id.toString(), newSong, token);\n      setNewSong(undefined);\n      setReady(false);\n    }\n  }, [admin, (_album$album2 = album.album) === null || _album$album2 === void 0 ? void 0 : _album$album2.artist, userId, newSong, ready, token]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    onFinish: e => {\n      var _album$album3;\n\n      setNewSong({\n        name: e.name,\n        duration: e.duration,\n        artist: (_album$album3 = album.album) === null || _album$album3 === void 0 ? void 0 : _album$album3.artist,\n        album: album.album\n      });\n      setReady(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Titre\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Titre de la chanson\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Dur\\xE9e\",\n      name: \"duration\",\n      rules: [{\n        required: true,\n        message: \"Durée de la chanson\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        htmlType: \"submit\",\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateSong, \"Spj0kFxD+phsl6NK6ar2yfuP3RA=\");\n\n_c = CreateSong;\nexport default CreateSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSong\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/songs/createSong.tsx"],"names":["Button","Form","Input","React","useEffect","useState","useContext","songsService","userContext","CreateSong","album","newSong","setNewSong","ready","setReady","userId","admin","token","artist","id","createSong","toString","undefined","e","name","duration","required","message"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAAsBC,WAAtB,QAAyC,gBAAzC;;AAMA,MAAMC,UAA2B,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAC7C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAU,KAAV,CAAlC;AACA,QAAM;AAAEU,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA2BX,UAAU,CAACE,WAAD,CAA3C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAIS,KAAK,IAAIE,MAAT,IAAmBC,KAAnB,qBAA4BN,KAAK,CAACA,KAAlC,wEAA4B,aAAaQ,MAAzC,wDAA4B,oBAAqBC,EAAjD,CAAJ,EAAyD;AACvDZ,MAAAA,YAAY,CAACa,UAAb,CAAwBV,KAAK,CAACA,KAAN,CAAYQ,MAAZ,CAAmBC,EAAnB,CAAsBE,QAAtB,EAAxB,EAA0DV,OAA1D,EAAmEM,KAAnE;AACAL,MAAAA,UAAU,CAACU,SAAD,CAAV;AACAR,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GANQ,EAMN,CAACE,KAAD,mBAAQN,KAAK,CAACA,KAAd,kDAAQ,cAAaQ,MAArB,EAA6BH,MAA7B,EAAqCJ,OAArC,EAA8CE,KAA9C,EAAqDI,KAArD,CANM,CAAT;AAQA,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAGM,CAAD,IAAO;AAAA;;AACfX,MAAAA,UAAU,CAAC;AACTY,QAAAA,IAAI,EAAED,CAAC,CAACC,IADC;AAETC,QAAAA,QAAQ,EAAEF,CAAC,CAACE,QAFH;AAGTP,QAAAA,MAAM,mBAAER,KAAK,CAACA,KAAR,kDAAE,cAAaQ,MAHZ;AAITR,QAAAA,KAAK,EAAEA,KAAK,CAACA;AAJJ,OAAD,CAAV;AAMAI,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAVH;AAAA,4BAYE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,CAAC;AAAEY,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHT;AAAA,6BAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAZF,eAoBE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,CAAC;AAAED,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHT;AAAA,6BAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YApBF,eA4BE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAC,OAA7B;AAAqC,QAAA,QAAQ,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAjDD;;GAAMlB,U;;KAAAA,U;AAmDN,eAAeA,UAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport React, { FC, useEffect, useState, useContext } from \"react\";\nimport songsService from \"../services/songsService\";\nimport { Album, Song, userContext } from \"../utils/types\";\n\ninterface AlbumsProps {\n  album: Album | undefined;\n}\n\nconst CreateSong: FC<AlbumsProps> = (album) => {\n  const [newSong, setNewSong] = useState<Song>();\n  const [ready, setReady] = useState<boolean>(false);\n  const { userId, admin, token } = useContext(userContext);\n\n  useEffect(() => {\n    if (ready && userId && admin && album.album?.artist?.id) {\n      songsService.createSong(album.album.artist.id.toString(), newSong, token);\n      setNewSong(undefined);\n      setReady(false);\n    }\n  }, [admin, album.album?.artist, userId, newSong, ready, token]);\n\n  return (\n    <Form\n      name=\"basic\"\n      onFinish={(e) => {\n        setNewSong({\n          name: e.name,\n          duration: e.duration,\n          artist: album.album?.artist,\n          album: album.album,\n        });\n        setReady(true);\n      }}\n    >\n      <Form.Item\n        label=\"Titre\"\n        name=\"name\"\n        rules={[{ required: true, message: \"Titre de la chanson\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Durée\"\n        name=\"duration\"\n        rules={[{ required: true, message: \"Durée de la chanson\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\n          Ajouter\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default CreateSong;\n"]},"metadata":{},"sourceType":"module"}