{"ast":null,"code":"import axios from \"axios\";\nconst SONGS_API_BASE_URL = \"http://localhost:8080/song\";\n\nclass SongsService {\n  getSongs() {\n    return axios.get(SONGS_API_BASE_URL + \"s\");\n  }\n\n  createSong(artistId, song, token) {\n    return axios.post(SONGS_API_BASE_URL + \"/\" + artistId, song, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n  }\n\n  getSongById(songId) {\n    return axios.get(SONGS_API_BASE_URL + \"/\" + songId);\n  }\n\n  updateSong(song, songId, token) {\n    return axios.put(SONGS_API_BASE_URL + \"/\" + songId, song, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n  }\n\n  deleteSong(songId, token) {\n    return axios.delete(SONGS_API_BASE_URL + \"/\" + songId, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n  }\n\n}\n\nexport default new SongsService();","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/services/songsService.tsx"],"names":["axios","SONGS_API_BASE_URL","SongsService","getSongs","get","createSong","artistId","song","token","post","headers","Authorization","getSongById","songId","updateSong","put","deleteSong","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG,4BAA3B;;AAEA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,QAAQ,GAAG;AACT,WAAOH,KAAK,CAACI,GAAN,CAAUH,kBAAkB,GAAG,GAA/B,CAAP;AACD;;AAEDI,EAAAA,UAAU,CAACC,QAAD,EAAmBC,IAAnB,EAA8BC,KAA9B,EAAoD;AAC5D,WAAOR,KAAK,CAACS,IAAN,CAAWR,kBAAkB,GAAG,GAArB,GAA2BK,QAAtC,EAAgDC,IAAhD,EAAsD;AAC3DG,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYH;AAA7B;AADkD,KAAtD,CAAP;AAGD;;AAEDI,EAAAA,WAAW,CAACC,MAAD,EAAiB;AAC1B,WAAOb,KAAK,CAACI,GAAN,CAAUH,kBAAkB,GAAG,GAArB,GAA2BY,MAArC,CAAP;AACD;;AAEDC,EAAAA,UAAU,CAACP,IAAD,EAAYM,MAAZ,EAA4BL,KAA5B,EAAkD;AAC1D,WAAOR,KAAK,CAACe,GAAN,CAAUd,kBAAkB,GAAG,GAArB,GAA2BY,MAArC,EAA6CN,IAA7C,EAAmD;AACxDG,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYH;AAA7B;AAD+C,KAAnD,CAAP;AAGD;;AAEDQ,EAAAA,UAAU,CAACH,MAAD,EAAiBL,KAAjB,EAAuC;AAC/C,WAAOR,KAAK,CAACiB,MAAN,CAAahB,kBAAkB,GAAG,GAArB,GAA2BY,MAAxC,EAAgD;AACrDH,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYH;AAA7B;AAD4C,KAAhD,CAAP;AAGD;;AAzBgB;;AA4BnB,eAAe,IAAIN,YAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nconst SONGS_API_BASE_URL = \"http://localhost:8080/song\";\n\nclass SongsService {\n  getSongs() {\n    return axios.get(SONGS_API_BASE_URL + \"s\");\n  }\n\n  createSong(artistId: string, song: any, token: string | null) {\n    return axios.post(SONGS_API_BASE_URL + \"/\" + artistId, song, {\n      headers: { Authorization: \"Bearer \" + token },\n    });\n  }\n\n  getSongById(songId: string) {\n    return axios.get(SONGS_API_BASE_URL + \"/\" + songId);\n  }\n\n  updateSong(song: any, songId: string, token: string | null) {\n    return axios.put(SONGS_API_BASE_URL + \"/\" + songId, song, {\n      headers: { Authorization: \"Bearer \" + token },\n    });\n  }\n\n  deleteSong(songId: string, token: string | null) {\n    return axios.delete(SONGS_API_BASE_URL + \"/\" + songId, {\n      headers: { Authorization: \"Bearer \" + token },\n    });\n  }\n}\n\nexport default new SongsService();\n"]},"metadata":{},"sourceType":"module"}