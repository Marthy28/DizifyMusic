{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/albums/createAlbum.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input, Select } from \"antd\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AlbumsService from \"../services/albumsService\";\nimport ArtistService from \"../services/artistService\";\nimport { userContext } from \"../utils/types\";\n\nconst CreateAlbum = () => {\n  _s();\n\n  const [artists, setArtists] = useState([]);\n  const [newAlbum, setNewAlbum] = useState();\n  const [ready, setReady] = useState(false);\n  const [artistid, setID] = useState();\n  const {\n    token\n  } = useContext(userContext);\n  useEffect(() => {\n    ArtistService.getArtists().then(res => {\n      const artists = res.data;\n      setArtists(artists);\n    });\n  }, []);\n\n  function handleChange(value) {\n    setNewAlbum({\n      artist: {\n        id: value\n      }\n    });\n    setID(value);\n  }\n\n  useEffect(() => {\n    if (ready) {\n      AlbumsService.createAlbum(newAlbum, artistid, token);\n      setNewAlbum(undefined);\n      setReady(false);\n    }\n  }, [artistid, newAlbum, ready, token]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    onFinish: e => {\n      setNewAlbum({ ...newAlbum,\n        name: e.name,\n        pictureUri: e.pictureUri\n      });\n      setReady(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Nom de l'album\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Nom de l'album\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Lien vers l'image\",\n      name: \"pictureUri\",\n      rules: [{\n        required: true,\n        message: \"Lien vers l'image\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Artiste\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        onChange: handleChange,\n        children: artists.map((artist, i) => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: artist.id,\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        shape: \"round\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateAlbum, \"e6JdRFZZKmp7PlrMAtxJ6uA+SBo=\");\n\n_c = CreateAlbum;\nexport default CreateAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAlbum\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/albums/createAlbum.tsx"],"names":["Button","Form","Input","Select","React","useContext","useEffect","useState","AlbumsService","ArtistService","userContext","CreateAlbum","artists","setArtists","newAlbum","setNewAlbum","ready","setReady","artistid","setID","token","getArtists","then","res","data","handleChange","value","artist","id","createAlbum","undefined","e","name","pictureUri","required","message","map","i"],"mappings":"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","sourcesContent":["import { Button, Form, Input, Select } from \"antd\";\nimport React, { FC, useContext, useEffect, useState } from \"react\";\nimport AlbumsService from \"../services/albumsService\";\nimport ArtistService from \"../services/artistService\";\nimport { userContext } from \"../utils/types\";\nimport { Album, Artist } from \"../utils/types\";\n\ninterface AlbumsProps {}\n\nconst CreateAlbum: FC<AlbumsProps> = () => {\n  const [artists, setArtists] = useState<Artist[]>([]);\n  const [newAlbum, setNewAlbum] = useState<Album>();\n  const [ready, setReady] = useState<boolean>(false);\n  const [artistid, setID] = useState<string>();\n  const { token } = useContext(userContext);\n\n  useEffect(() => {\n    ArtistService.getArtists().then((res) => {\n      const artists = res.data;\n      setArtists(artists);\n    });\n  }, []);\n\n  function handleChange(value: any) {\n    setNewAlbum({\n      artist: { id: value },\n    });\n    setID(value);\n  }\n  useEffect(() => {\n    if (ready) {\n      AlbumsService.createAlbum(newAlbum, artistid, token);\n      setNewAlbum(undefined);\n      setReady(false);\n    }\n  }, [artistid, newAlbum, ready, token]);\n\n  return (\n    <Form\n      name=\"basic\"\n      onFinish={(e) => {\n        setNewAlbum({\n          ...newAlbum,\n          name: e.name,\n          pictureUri: e.pictureUri,\n        });\n        setReady(true);\n      }}\n    >\n      <Form.Item\n        label=\"Nom de l'album\"\n        name=\"name\"\n        rules={[{ required: true, message: \"Nom de l'album\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Lien vers l'image\"\n        name=\"pictureUri\"\n        rules={[{ required: true, message: \"Lien vers l'image\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item label=\"Artiste\">\n        <Select onChange={handleChange}>\n          {artists.map((artist, i) => (\n            <Select.Option value={artist.id!}>{artist.name}</Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item>\n        <Button shape=\"round\" type=\"primary\" htmlType=\"submit\">\n          Ajouter\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default CreateAlbum;\n"]},"metadata":{},"sourceType":"module"}