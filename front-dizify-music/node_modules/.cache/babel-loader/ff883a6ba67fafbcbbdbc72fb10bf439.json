{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/playlists/playlist.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Form, Input, message } from \"antd\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport playlistService from \"../services/playlistService\";\nimport SongsForAPlaylist from \"../songs/songsForAPlaylist\";\nimport { userContext } from \"../utils/types\";\n\nconst Playlists = () => {\n  _s();\n\n  const [Playlists, setPlaylists] = useState([]);\n  const {\n    userId\n  } = useContext(userContext);\n\n  function getPlaylistsByUser() {\n    playlistService.getPlaylistsByUser(userId).then(res => {\n      const Plalists = res.data;\n      setPlaylists(Plalists);\n    });\n  }\n\n  useEffect(() => {\n    userId && getPlaylistsByUser();\n  }, [userId]);\n  return userId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 55,\n        marginTop: 50,\n        marginBottom: 50,\n        color: \"var(--pink)\"\n      },\n      children: \"Tes playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      style: {\n        display: \"flex\"\n      },\n      onFinish: e => {\n        playlistService.createPlaylist(userId, e.name);\n        message.success(\"Playlist ajoutée ! \");\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Nom de la playlist\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Nom de la playlist\"\n        }],\n        style: {\n          marginRight: \"2%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          shape: \"round\",\n          htmlType: \"submit\",\n          children: \"Ajouter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        marginTop: \"1%\"\n      },\n      children: Playlists.map((playlist, i) => {\n        var _playlist$songs;\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: 350,\n              marginRight: \"1%\",\n              marginBottom: \"1%\",\n              boxShadow: \"0px 4px 100px -64px rgba(0,0,0,0.35)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: 34\n              },\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), ((_playlist$songs = playlist.songs) === null || _playlist$songs === void 0 ? void 0 : _playlist$songs.length) > 0 ? /*#__PURE__*/_jsxDEV(SongsForAPlaylist, {\n              playlist: playlist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"var(--pink)\"\n              },\n              children: \"Il n'y a pas chansons dans cette playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              shape: \"round\",\n              onClick: () => {\n                playlist.id && playlistService.deletePlaylist(playlist.id);\n                message.success(\"Playlist suprimée !\");\n              },\n              children: \"Supprimer la playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Tu dois te connecter pour acc\\xE9der \\xE0 tes playlist\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Playlists, \"WGfKu6RosTA2f9ba61BBf5x2yPc=\");\n\n_c = Playlists;\nexport default Playlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/playlists/playlist.tsx"],"names":["Button","Card","Form","Input","message","React","useContext","useEffect","useState","playlistService","SongsForAPlaylist","userContext","Playlists","setPlaylists","userId","getPlaylistsByUser","then","res","Plalists","data","fontWeight","fontSize","marginTop","marginBottom","color","display","e","createPlaylist","name","success","required","marginRight","flexWrap","map","playlist","i","width","boxShadow","songs","length","id","deletePlaylist"],"mappings":"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","sourcesContent":["import { Button, Card, Form, Input, message } from \"antd\";\nimport React, { FC, useContext, useEffect, useState } from \"react\";\nimport playlistService from \"../services/playlistService\";\nimport SongsForAPlaylist from \"../songs/songsForAPlaylist\";\nimport { Playlist, userContext } from \"../utils/types\";\n\nconst Playlists: FC = () => {\n  const [Playlists, setPlaylists] = useState<Playlist[]>([]);\n  const { userId } = useContext(userContext);\n\n  function getPlaylistsByUser() {\n    playlistService.getPlaylistsByUser(userId).then((res) => {\n      const Plalists = res.data;\n      setPlaylists(Plalists);\n    });\n  }\n\n  useEffect(() => {\n    userId && getPlaylistsByUser();\n  }, [userId]);\n\n  return userId ? (\n    <>\n      <h1\n        style={{\n          fontWeight: \"bold\",\n          fontSize: 55,\n          marginTop: 50,\n          marginBottom: 50,\n          color: \"var(--pink)\",\n        }}\n      >\n        Tes playlists\n      </h1>\n      <Form\n        name=\"basic\"\n        style={{ display: \"flex\" }}\n        onFinish={(e) => {\n          playlistService.createPlaylist(userId, e.name);\n          message.success(\"Playlist ajoutée ! \");\n        }}\n      >\n        <Form.Item\n          label=\"Nom de la playlist\"\n          name=\"name\"\n          rules={[{ required: true, message: \"Nom de la playlist\" }]}\n          style={{ marginRight: \"2%\" }}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\n            Ajouter\n          </Button>\n        </Form.Item>\n      </Form>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"1%\" }}>\n        {Playlists.map((playlist, i) => (\n          <>\n            <Card\n              style={{\n                width: 350,\n                marginRight: \"1%\",\n                marginBottom: \"1%\",\n                boxShadow: \"0px 4px 100px -64px rgba(0,0,0,0.35)\",\n              }}\n            >\n              <h1 style={{ fontWeight: \"bold\", fontSize: 34 }}>\n                {playlist.name}\n              </h1>\n              {playlist.songs?.length! > 0 ? (\n                <SongsForAPlaylist playlist={playlist} />\n              ) : (\n                <p style={{ color: \"var(--pink)\" }}>\n                  Il n'y a pas chansons dans cette playlist\n                </p>\n              )}\n              <Button\n                shape=\"round\"\n                onClick={() => {\n                  playlist.id && playlistService.deletePlaylist(playlist.id);\n                  message.success(\"Playlist suprimée !\");\n                }}\n              >\n                Supprimer la playlist\n              </Button>\n            </Card>\n          </>\n        ))}\n      </div>\n    </>\n  ) : (\n    <h1>Tu dois te connecter pour accéder à tes playlist</h1>\n  );\n};\n\nexport default Playlists;\n"]},"metadata":{},"sourceType":"module"}