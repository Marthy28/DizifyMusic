{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/songs/songsForAnAlbum.tsx\",\n    _s = $RefreshSig$();\n\nimport { CloseOutlined, PlusOutlined, PlaySquareOutlined, HeartOutlined } from \"@ant-design/icons\";\nimport { Button, message, Modal } from \"antd\";\nimport React, { useState, useContext } from \"react\";\nimport SongsService from \"../services/songsService\";\nimport CreateSong from \"./createSong\";\nimport { userContext } from \"../utils/types\";\nimport AddSongToPlaylist from \"./addSongToPlaylist\";\nimport playlistService from \"../services/playlistService\";\n\nconst SongsForAnAlbum = album => {\n  _s();\n\n  var _album$album, _album$album$songs;\n\n  const [visibleAddSong, setVisibleAddSong] = useState(false);\n  const {\n    admin,\n    userId,\n    token\n  } = useContext(userContext);\n\n  function DataModal(songId) {\n    Modal.success({\n      title: \"Ajouter un titre Ã  une playlist\",\n      content: /*#__PURE__*/_jsxDEV(AddSongToPlaylist, {\n        songId: songId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this),\n      icon: /*#__PURE__*/_jsxDEV(PlaySquareOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this),\n      onOk: () => playlistService.getPlaylistsByUser(userId)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexDirection: \"column\",\n        marginBottom: \"2%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontWeight: \"bold\",\n            fontSize: 30,\n            color: \"var(--pink)\",\n            marginRight: \"10%\"\n          },\n          children: \"Titres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), admin === \"null\" ? null : /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => {\n            setVisibleAddSong(true);\n          },\n          shape: \"circle\",\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Ajouter un titre\",\n          visible: visibleAddSong,\n          onOk: () => {\n            setVisibleAddSong(false);\n          },\n          onCancel: () => setVisibleAddSong(false),\n          children: /*#__PURE__*/_jsxDEV(CreateSong, {\n            album: album.album\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), (_album$album = album.album) === null || _album$album === void 0 ? void 0 : (_album$album$songs = _album$album.songs) === null || _album$album$songs === void 0 ? void 0 : _album$album$songs.map((song, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [song.name, \" \", song.duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), admin == null && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                border: \"none\",\n                color: \"var(--pink)\"\n              },\n              onClick: () => {\n                DataModal(song.id);\n              },\n              shape: \"circle\",\n              icon: /*#__PURE__*/_jsxDEV(PlaySquareOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                border: \"none\",\n                color: \"var(--pink)\"\n              },\n              onClick: () => {\n                message.error(\"TODO\");\n              },\n              shape: \"circle\",\n              icon: /*#__PURE__*/_jsxDEV(HeartOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), admin && /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              border: \"none\",\n              color: \"var(--pink)\"\n            },\n            onClick: () => {\n              if (song.id) {\n                SongsService.deleteSong(song.id.toString(), token);\n              }\n            },\n            shape: \"circle\",\n            icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SongsForAnAlbum, \"2oVzx8i2i/QfIav0e+9HaTs5ZF0=\");\n\n_c = SongsForAnAlbum;\nexport default SongsForAnAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongsForAnAlbum\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/songs/songsForAnAlbum.tsx"],"names":["CloseOutlined","PlusOutlined","PlaySquareOutlined","HeartOutlined","Button","message","Modal","React","useState","useContext","SongsService","CreateSong","userContext","AddSongToPlaylist","playlistService","SongsForAnAlbum","album","visibleAddSong","setVisibleAddSong","admin","userId","token","DataModal","songId","success","title","content","icon","onOk","getPlaylistsByUser","flexDirection","marginBottom","display","alignItems","fontWeight","fontSize","color","marginRight","songs","map","song","i","justifyContent","name","duration","border","id","error","deleteSong","toString"],"mappings":"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","sourcesContent":["import {\n  CloseOutlined,\n  PlusOutlined,\n  PlaySquareOutlined,\n  HeartOutlined,\n} from \"@ant-design/icons\";\nimport { Button, message, Modal } from \"antd\";\nimport React, { FC, useState, useContext } from \"react\";\nimport SongsService from \"../services/songsService\";\nimport CreateSong from \"./createSong\";\nimport { Album, userContext } from \"../utils/types\";\nimport AddSongToPlaylist from \"./addSongToPlaylist\";\nimport playlistService from \"../services/playlistService\";\n\ninterface SongsProps {\n  album: Album | undefined;\n}\n\nconst SongsForAnAlbum: FC<SongsProps> = (album) => {\n  const [visibleAddSong, setVisibleAddSong] = useState<boolean>(false);\n  const { admin, userId, token } = useContext(userContext);\n\n  function DataModal(songId: any) {\n    Modal.success({\n      title: \"Ajouter un titre Ã  une playlist\",\n      content: <AddSongToPlaylist songId={songId} />,\n      icon: <PlaySquareOutlined />,\n      onOk: () => playlistService.getPlaylistsByUser(userId),\n    });\n  }\n\n  return (\n    <>\n      <div style={{ flexDirection: \"column\", marginBottom: \"2%\" }}>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <h1\n            style={{\n              fontWeight: \"bold\",\n              fontSize: 30,\n              color: \"var(--pink)\",\n              marginRight: \"10%\",\n            }}\n          >\n            Titres\n          </h1>\n          {admin === \"null\" ? null : (\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                setVisibleAddSong(true);\n              }}\n              shape=\"circle\"\n              icon={<PlusOutlined />}\n            />\n          )}\n          <Modal\n            title=\"Ajouter un titre\"\n            visible={visibleAddSong}\n            onOk={() => {\n              setVisibleAddSong(false);\n            }}\n            onCancel={() => setVisibleAddSong(false)}\n          >\n            <CreateSong album={album.album} />\n          </Modal>\n        </div>\n        {album.album?.songs?.map((song, i) => (\n          <div key={i}>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <p>\n                {song.name} {song.duration}\n              </p>\n              {admin == null && (\n                <>\n                  <Button\n                    style={{ border: \"none\", color: \"var(--pink)\" }}\n                    onClick={() => {\n                      DataModal(song.id);\n                    }}\n                    shape=\"circle\"\n                    icon={<PlaySquareOutlined />}\n                  />\n\n                  <Button\n                    style={{ border: \"none\", color: \"var(--pink)\" }}\n                    onClick={() => {\n                      message.error(\"TODO\");\n                    }}\n                    shape=\"circle\"\n                    icon={<HeartOutlined />}\n                  />\n                </>\n              )}\n              {admin && (\n                <Button\n                  style={{ border: \"none\", color: \"var(--pink)\" }}\n                  onClick={() => {\n                    if (song.id) {\n                      SongsService.deleteSong(song.id.toString(), token);\n                    }\n                  }}\n                  shape=\"circle\"\n                  icon={<CloseOutlined />}\n                />\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default SongsForAnAlbum;\n"]},"metadata":{},"sourceType":"module"}