{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/artists/artists.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Divider, Image, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport ArtistService from \"../services/artistService\";\nimport CreateArtist from \"./createArtist\";\nimport UpdateArtist from \"./updateArtist\";\nimport { userContext } from \"../utils/types\";\n\nconst ArtistsList = () => {\n  _s();\n\n  const [Artists, setArtists] = useState([]);\n  const [ArtistById, setArtistByID] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [updateModal, setUpdateModal] = useState(false);\n  const [listVisible, setListVisible] = useState(false);\n  const [id, setID] = useState();\n  const [songVisible, setSongVisible] = useState(false);\n  const {\n    userId,\n    admin,\n    token\n  } = useContext(userContext);\n  const {\n    confirm\n  } = Modal;\n\n  function getArtists() {\n    ArtistService.getArtists().then(res => {\n      const Artists = res.data;\n      setArtists(Artists);\n    });\n  }\n\n  function deleteID(artistID) {\n    ArtistService.deleteArtist(artistID.toString(), token).then(res => {\n      getArtists();\n    });\n  }\n\n  function artistById(artistID) {\n    ArtistService.getArtistById(artistID.toString(), token).then(res => {\n      setArtistByID(res.data);\n    });\n  }\n\n  function showUpdating() {\n    confirm({\n      title: \"Modifier l'artiste\",\n      content: /*#__PURE__*/_jsxDEV(UpdateArtist, {\n        artist: ArtistById\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this),\n\n      onOk() {\n        setUpdateModal(false);\n      },\n\n      onCancel() {\n        setUpdateModal(false);\n      }\n\n    });\n  }\n\n  useEffect(() => {\n    userId && getArtists();\n  }, [userId]);\n  return userId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 55,\n        marginTop: 50,\n        color: \"var(--pink)\"\n      },\n      children: \"Artistes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        marginTop: \"1%\"\n      },\n      children: Artists.map((artist, _i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            flex: 1,\n            width: 300,\n            marginRight: \"1%\",\n            marginBottom: \"1%\",\n            boxShadow: \"0px 4px 100px -64px rgba(0,0,0,0.35)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 440\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: 34\n              },\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Liste Albums :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: () => {\n                setListVisible(true);\n                setID(artist.id);\n              },\n              shape: \"circle\",\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Liste Titres :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: () => {\n                setSongVisible(true);\n                setID(artist.id);\n              },\n              shape: \"circle\",\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              title: \"Liste des albums\",\n              visible: listVisible,\n              onOk: () => {\n                setListVisible(false);\n              },\n              onCancel: () => {\n                setListVisible(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(Divider, {\n                orientation: \"left\",\n                children: \"Albums : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), artist.albums.map(album => {\n                var _album$releaseDate;\n\n                return /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: album.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: (_album$releaseDate = album.releaseDate) === null || _album$releaseDate === void 0 ? void 0 : _album$releaseDate.slice(0, 10)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              title: \"Liste des titres\",\n              visible: songVisible,\n              onOk: () => {\n                setSongVisible(false);\n              },\n              onCancel: () => {\n                setSongVisible(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(Divider, {\n                orientation: \"left\",\n                children: \"Titres : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), artist.songs.map(song => /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: song.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              width: 200,\n              src: `${artist.imageUri}`,\n              style: {\n                marginBottom: \"2%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), admin === \"null\" ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              shape: \"round\",\n              onClick: () => {\n                setUpdateModal(true);\n                artistById(artist.id);\n                showUpdating();\n              },\n              children: \"Modifier l'artiste\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              shape: \"round\",\n              onClick: () => {\n                artist.id && deleteID(artist.id);\n              },\n              children: \"Supprimer l'artiste\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), admin === \"null\" ? null : /*#__PURE__*/_jsxDEV(Button, {\n      shape: \"round\",\n      type: \"primary\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Ajouter un artiste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Ajouter un artiste\",\n      visible: visible,\n      onOk: () => {\n        setVisible(false);\n        getArtists();\n      },\n      onCancel: () => setVisible(false),\n      children: /*#__PURE__*/_jsxDEV(CreateArtist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Connexion requise\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ArtistsList, \"PZ+Dx2aQ2M0oknGwDSMNNNSAvBY=\");\n\n_c = ArtistsList;\nexport default ArtistsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistsList\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/artists/artists.tsx"],"names":["Button","Card","Divider","Image","Modal","PlusOutlined","React","useContext","useEffect","useState","ArtistService","CreateArtist","UpdateArtist","userContext","ArtistsList","Artists","setArtists","ArtistById","setArtistByID","visible","setVisible","updateModal","setUpdateModal","listVisible","setListVisible","id","setID","songVisible","setSongVisible","userId","admin","token","confirm","getArtists","then","res","data","deleteID","artistID","deleteArtist","toString","artistById","getArtistById","showUpdating","title","content","onOk","onCancel","fontWeight","fontSize","marginTop","color","display","flexWrap","map","artist","_i","flex","width","marginRight","marginBottom","boxShadow","height","name","albums","album","releaseDate","slice","songs","song","imageUri"],"mappings":"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","sourcesContent":["import { Button, Card, Divider, Image, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport React, { FC, useContext, useEffect, useState } from \"react\";\nimport ArtistService from \"../services/artistService\";\nimport CreateArtist from \"./createArtist\";\nimport UpdateArtist from \"./updateArtist\";\nimport { userContext } from \"../utils/types\";\n\ntype Song = {\n  id: number;\n  duration?: string;\n  name?: string;\n  artist?: Artist;\n  albums: Album[];\n};\n\ntype Album = {\n  id: number;\n  name?: string;\n  pictureUri?: string;\n  artist?: Artist;\n  songs?: Song;\n  releaseDate?: string;\n  artist_id: string;\n};\n\ntype Artist = {\n  id: number;\n  name?: string;\n  imageUri?: string;\n  albums: Album[];\n  songs: Song[];\n};\n\nconst ArtistsList: FC = () => {\n  const [Artists, setArtists] = useState<Artist[]>([]);\n  const [ArtistById, setArtistByID] = useState<Artist[]>([]);\n  const [visible, setVisible] = useState<boolean>(false);\n  const [updateModal, setUpdateModal] = useState<boolean>(false);\n  const [listVisible, setListVisible] = useState<boolean>(false);\n  const [id, setID] = useState<number>();\n  const [songVisible, setSongVisible] = useState<boolean>(false);\n  const { userId, admin, token } = useContext(userContext);\n\n  const { confirm } = Modal;\n\n  function getArtists() {\n    ArtistService.getArtists().then((res) => {\n      const Artists = res.data;\n      setArtists(Artists);\n    });\n  }\n\n  function deleteID(artistID: number) {\n    ArtistService.deleteArtist(artistID.toString(), token).then((res) => {\n      getArtists();\n    });\n  }\n\n  function artistById(artistID: number) {\n    ArtistService.getArtistById(artistID.toString(), token).then((res) => {\n      setArtistByID(res.data);\n    });\n  }\n\n  function showUpdating() {\n    confirm({\n      title: \"Modifier l'artiste\",\n      content: <UpdateArtist artist={ArtistById} />,\n      onOk() {\n        setUpdateModal(false);\n      },\n      onCancel() {\n        setUpdateModal(false);\n      },\n    });\n  }\n\n  useEffect(() => {\n    userId && getArtists();\n  }, [userId]);\n  return userId ? (\n    <>\n      <h1\n        style={{\n          fontWeight: \"bold\",\n          fontSize: 55,\n          marginTop: 50,\n          color: \"var(--pink)\",\n        }}\n      >\n        Artistes\n      </h1>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"1%\" }}>\n        {Artists.map((artist, _i) => (\n          <>\n            <Card\n              style={{\n                flex: 1,\n                width: 300,\n                marginRight: \"1%\",\n                marginBottom: \"1%\",\n                boxShadow: \"0px 4px 100px -64px rgba(0,0,0,0.35)\",\n              }}\n            >\n              <div style={{ height: 440 }}>\n                <h1 style={{ fontWeight: \"bold\", fontSize: 34 }}>\n                  {artist.name}\n                </h1>\n\n                <h3>Liste Albums :</h3>\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    setListVisible(true);\n                    setID(artist.id);\n                  }}\n                  shape=\"circle\"\n                  icon={<PlusOutlined />}\n                />\n                <h3>Liste Titres :</h3>\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    setSongVisible(true);\n                    setID(artist.id);\n                  }}\n                  shape=\"circle\"\n                  icon={<PlusOutlined />}\n                />\n\n                <Modal\n                  title=\"Liste des albums\"\n                  visible={listVisible}\n                  onOk={() => {\n                    setListVisible(false);\n                  }}\n                  onCancel={() => {\n                    setListVisible(false);\n                  }}\n                >\n                  <Divider orientation=\"left\">Albums : </Divider>\n                  {artist.albums.map((album) => (\n                    <ul>\n                      <li>{album.name}</li>\n                      <li>{album.releaseDate?.slice(0, 10)}</li>\n                    </ul>\n                  ))}\n                </Modal>\n\n                <Modal\n                  title=\"Liste des titres\"\n                  visible={songVisible}\n                  onOk={() => {\n                    setSongVisible(false);\n                  }}\n                  onCancel={() => {\n                    setSongVisible(false);\n                  }}\n                >\n                  <Divider orientation=\"left\">Titres : </Divider>\n                  {artist.songs.map((song) => (\n                    <ul>\n                      <li>{song.name}</li>\n                    </ul>\n                  ))}\n                </Modal>\n                <Image\n                  width={200}\n                  src={`${artist.imageUri}`}\n                  style={{ marginBottom: \"2%\" }}\n                />\n              </div>\n              {admin === \"null\" ? null : (\n                <>\n                  <Button\n                    shape=\"round\"\n                    onClick={() => {\n                      setUpdateModal(true);\n                      artistById(artist.id);\n                      showUpdating();\n                    }}\n                  >\n                    Modifier l'artiste\n                  </Button>\n                  <Button\n                    shape=\"round\"\n                    onClick={() => {\n                      artist.id && deleteID(artist.id);\n                    }}\n                  >\n                    Supprimer l'artiste\n                  </Button>\n                </>\n              )}\n            </Card>\n          </>\n        ))}\n      </div>\n      {admin === \"null\" ? null : (\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          onClick={() => {\n            setVisible(true);\n          }}\n        >\n          Ajouter un artiste\n        </Button>\n      )}\n      <Modal\n        title=\"Ajouter un artiste\"\n        visible={visible}\n        onOk={() => {\n          setVisible(false);\n          getArtists();\n        }}\n        onCancel={() => setVisible(false)}\n      >\n        <CreateArtist />\n      </Modal>\n    </>\n  ) : (\n    <h1>Connexion requise</h1>\n  );\n};\nexport default ArtistsList;\n"]},"metadata":{},"sourceType":"module"}