{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/albums/updateAlbum.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input, Select } from \"antd\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AlbumsService from \"../services/albumsService\";\nimport artistService from \"../services/artistService\";\nimport { userContext } from \"../utils/types\";\n\nconst UpdateAlbum = ({\n  data\n}) => {\n  _s();\n\n  const [artists, setArtists] = useState([]);\n  const [UpdateAlbum, setUpdateAlbum] = useState();\n  const [ready, setReady] = useState(false);\n  const {\n    token\n  } = useContext(userContext);\n  useEffect(() => {\n    artistService.getArtists().then(res => {\n      const artists = res.data;\n      setArtists(artists);\n    });\n  }, []);\n  useEffect(() => {\n    if (ready) {\n      AlbumsService.updateAlbum(UpdateAlbum, data, token);\n      setUpdateAlbum(undefined);\n      setReady(false);\n    }\n  }, [UpdateAlbum, ready, data, token]);\n\n  function handleChange(value) {\n    setUpdateAlbum({\n      artist: {\n        id: value\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    onFinish: e => {\n      setUpdateAlbum({ ...UpdateAlbum,\n        name: e.name,\n        pictureUri: e.pictureUri\n      });\n      setReady(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Nom de l'album\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Nom de l'album\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Lien vers l'image\",\n      name: \"pictureUri\",\n      rules: [{\n        required: true,\n        message: \"Lien vers l'image\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Artiste\",\n      rules: [{\n        required: true,\n        message: \"Artiste\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        onChange: handleChange,\n        children: artists.map((artist, i) => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: artist.id,\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        shape: \"round\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Confirmer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateAlbum, \"z7IjZtRrTPYy4H+LN6GyA6M4MTQ=\");\n\n_c = UpdateAlbum;\nexport default UpdateAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateAlbum\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/albums/updateAlbum.tsx"],"names":["Button","Form","Input","Select","React","useContext","useEffect","useState","AlbumsService","artistService","userContext","UpdateAlbum","data","artists","setArtists","setUpdateAlbum","ready","setReady","token","getArtists","then","res","updateAlbum","undefined","handleChange","value","artist","id","e","name","pictureUri","required","message","map","i"],"mappings":"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","sourcesContent":["import { Button, Form, Input, Select } from \"antd\";\nimport React, { FC, useContext, useEffect, useState } from \"react\";\nimport AlbumsService from \"../services/albumsService\";\nimport artistService from \"../services/artistService\";\nimport { userContext } from \"../utils/types\";\n\ntype Song = {\n  id: number;\n  duration?: string;\n  name?: string;\n  artist?: Artist;\n  albums?: Album[];\n};\n\ntype Album = {\n  id?: number;\n  name?: string;\n  pictureUri?: string;\n  artist?: Artist;\n  songs?: Song;\n  releaseDate?: string;\n};\n\ntype Artist = {\n  id: number;\n  name?: string;\n  imageUri?: string;\n  albums?: Album[];\n};\n\ninterface AlbumsProps {\n  data: any;\n}\n\nconst UpdateAlbum: FC<AlbumsProps> = ({ data }) => {\n  const [artists, setArtists] = useState<Artist[]>([]);\n  const [UpdateAlbum, setUpdateAlbum] = useState<Album>();\n  const [ready, setReady] = useState<boolean>(false);\n  const { token } = useContext(userContext);\n\n  useEffect(() => {\n    artistService.getArtists().then((res) => {\n      const artists = res.data;\n      setArtists(artists);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (ready) {\n      AlbumsService.updateAlbum(UpdateAlbum, data, token);\n      setUpdateAlbum(undefined);\n      setReady(false);\n    }\n  }, [UpdateAlbum, ready, data, token]);\n\n  function handleChange(value: any) {\n    setUpdateAlbum({\n      artist: { id: value },\n    });\n  }\n\n  return (\n    <Form\n      name=\"basic\"\n      onFinish={(e) => {\n        setUpdateAlbum({\n          ...UpdateAlbum,\n          name: e.name,\n          pictureUri: e.pictureUri,\n        });\n        setReady(true);\n      }}\n    >\n      <Form.Item\n        label=\"Nom de l'album\"\n        name=\"name\"\n        rules={[{ required: true, message: \"Nom de l'album\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Lien vers l'image\"\n        name=\"pictureUri\"\n        rules={[{ required: true, message: \"Lien vers l'image\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Artiste\"\n        rules={[{ required: true, message: \"Artiste\" }]}\n      >\n        <Select onChange={handleChange}>\n          {artists.map((artist, i) => (\n            <Select.Option value={artist.id}>{artist.name}</Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Button shape=\"round\" type=\"primary\" htmlType=\"submit\">\n          Confirmer\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default UpdateAlbum;\n"]},"metadata":{},"sourceType":"module"}