{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/songs/songsForAPlaylist.tsx\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport React from \"react\";\nimport playlistService from \"../services/playlistService\";\n\nconst SongsForAPlaylist = playlist => {\n  var _playlist$playlist$so;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexDirection: \"column\",\n        marginBottom: \"2%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontWeight: \"bold\",\n            fontSize: 30,\n            color: \"var(--pink)\",\n            marginRight: \"10%\"\n          },\n          children: \"Titres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), (_playlist$playlist$so = playlist.playlist.songs) === null || _playlist$playlist$so === void 0 ? void 0 : _playlist$playlist$so.map((song, i) => {\n        var _song$artist;\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flexDirection: \"column\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [song.name, \" \", song.duration]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"var(--blue)\",\n                  fontSize: 14\n                },\n                children: [\" \", (_song$artist = song.artist) === null || _song$artist === void 0 ? void 0 : _song$artist.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                border: \"none\",\n                color: \"var(--pink)\"\n              },\n              onClick: () => {\n                if (playlist.playlist.id && song.id) {\n                  playlistService.deleteSongInPlaylist(playlist.playlist.id, song.id);\n                }\n              },\n              shape: \"circle\",\n              icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = SongsForAPlaylist;\nexport default SongsForAPlaylist;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongsForAPlaylist\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/songs/songsForAPlaylist.tsx"],"names":["CloseOutlined","Button","React","playlistService","SongsForAPlaylist","playlist","flexDirection","marginBottom","display","alignItems","fontWeight","fontSize","color","marginRight","songs","map","song","i","justifyContent","name","duration","artist","border","id","deleteSongInPlaylist"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;AAOA,MAAMC,iBAAiC,GAAIC,QAAD,IAAc;AAAA;;AACtD,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE,QAAjB;AAA2BC,QAAAA,YAAY,EAAE;AAAzC,OAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,UAAU,EAAE;AAA/B,SAAZ;AAAA,+BACE;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,UAAU,EAAE,MADP;AAELC,YAAAA,QAAQ,EAAE,EAFL;AAGLC,YAAAA,KAAK,EAAE,aAHF;AAILC,YAAAA,WAAW,EAAE;AAJR,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,2BAaGR,QAAQ,CAACA,QAAT,CAAkBS,KAbrB,0DAaG,sBAAyBC,GAAzB,CAA6B,CAACC,IAAD,EAAOC,CAAP;AAAA;;AAAA,4BAC5B;AAAA,iCACE;AACE,YAAA,KAAK,EAAE;AACLT,cAAAA,OAAO,EAAE,MADJ;AAELC,cAAAA,UAAU,EAAE,QAFP;AAGLS,cAAAA,cAAc,EAAE;AAHX,aADT;AAAA,oCAOE;AAAK,cAAA,KAAK,EAAE;AAAEZ,gBAAAA,aAAa,EAAE;AAAjB,eAAZ;AAAA,sCACE;AAAA,2BACGU,IAAI,CAACG,IADR,OACeH,IAAI,CAACI,QADpB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAG,gBAAA,KAAK,EAAE;AAAER,kBAAAA,KAAK,EAAE,aAAT;AAAwBD,kBAAAA,QAAQ,EAAE;AAAlC,iBAAV;AAAA,2BACG,GADH,kBAEGK,IAAI,CAACK,MAFR,iDAEG,aAAaF,IAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAgBE,QAAC,MAAD;AACE,cAAA,KAAK,EAAE;AAAEG,gBAAAA,MAAM,EAAE,MAAV;AAAkBV,gBAAAA,KAAK,EAAE;AAAzB,eADT;AAEE,cAAA,OAAO,EAAE,MAAM;AACb,oBAAIP,QAAQ,CAACA,QAAT,CAAkBkB,EAAlB,IAAwBP,IAAI,CAACO,EAAjC,EAAqC;AACnCpB,kBAAAA,eAAe,CAACqB,oBAAhB,CACEnB,QAAQ,CAACA,QAAT,CAAkBkB,EADpB,EAEEP,IAAI,CAACO,EAFP;AAID;AACF,eATH;AAUE,cAAA,KAAK,EAAC,QAVR;AAWE,cAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,yBAD4B;AAAA,OAA7B,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoDD,CArDD;;KAAMnB,iB;AAuDN,eAAeA,iBAAf","sourcesContent":["import { CloseOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport React, { FC } from \"react\";\nimport playlistService from \"../services/playlistService\";\nimport { Playlist } from \"../utils/types\";\n\ninterface SongsProps {\n  playlist: Playlist;\n}\n\nconst SongsForAPlaylist: FC<SongsProps> = (playlist) => {\n  return (\n    <>\n      <div style={{ flexDirection: \"column\", marginBottom: \"2%\" }}>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <h1\n            style={{\n              fontWeight: \"bold\",\n              fontSize: 30,\n              color: \"var(--pink)\",\n              marginRight: \"10%\",\n            }}\n          >\n            Titres\n          </h1>\n        </div>\n        {playlist.playlist.songs?.map((song, i) => (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <div style={{ flexDirection: \"column\" }}>\n                <p>\n                  {song.name} {song.duration}\n                </p>\n                <p style={{ color: \"var(--blue)\", fontSize: 14 }}>\n                  {\" \"}\n                  {song.artist?.name}\n                </p>\n              </div>\n              <Button\n                style={{ border: \"none\", color: \"var(--pink)\" }}\n                onClick={() => {\n                  if (playlist.playlist.id && song.id) {\n                    playlistService.deleteSongInPlaylist(\n                      playlist.playlist.id,\n                      song.id\n                    );\n                  }\n                }}\n                shape=\"circle\"\n                icon={<CloseOutlined />}\n              />\n            </div>\n          </>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default SongsForAPlaylist;\n"]},"metadata":{},"sourceType":"module"}