{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/artists/createArtist.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input, Select } from \"antd\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport ArtistService from \"../services/artistService\";\nimport AlbumsService from \"../services/albumsService\";\nimport { userContext } from \"../utils/types\";\n\nconst CreateArtist = () => {\n  _s();\n\n  const [albums, setAlbums] = useState([]);\n  const [newArtist, setNewArtist] = useState();\n  const [ready, setReady] = useState(false);\n  const {\n    userId,\n    admin,\n    token\n  } = useContext(userContext);\n  useEffect(() => {\n    AlbumsService.getAlbums().then(res => {\n      const albums = res.data;\n      setAlbums(albums);\n    });\n  }, []);\n  useEffect(() => {\n    if (ready) {\n      ArtistService.createArtist(newArtist, token);\n      setNewArtist(undefined);\n      setReady(false);\n    }\n  }, [admin, userId, newArtist, ready, token]);\n\n  function handleChange(value) {\n    setNewArtist({\n      albums: {\n        id: value\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    onFinish: e => {\n      setNewArtist({ ...newArtist,\n        name: e.name,\n        imageUri: e.imageUri\n      });\n      setReady(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Nom de l'artiste\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Nom de l'artiste\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Lien vers l'image\",\n      name: \"imageUri\",\n      rules: [{\n        required: true,\n        message: \"Lien vers l'image\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Album\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        onChange: handleChange,\n        children: albums.map((album, i) => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: album.id,\n          children: album.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        htmlType: \"submit\",\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateArtist, \"NG9dPldmScVjiv08dihyJcaFhTI=\");\n\n_c = CreateArtist;\nexport default CreateArtist;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateArtist\");","map":{"version":3,"sources":["/home/marie/Bureau/Ynov/Web Services/DizifyMusic/front-dizify-music/src/artists/createArtist.tsx"],"names":["Button","Form","Input","Select","React","useEffect","useState","useContext","ArtistService","AlbumsService","userContext","CreateArtist","albums","setAlbums","newArtist","setNewArtist","ready","setReady","userId","admin","token","getAlbums","then","res","data","createArtist","undefined","handleChange","value","id","e","name","imageUri","required","message","map","album","i"],"mappings":"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","sourcesContent":["import { Button, Form, Input, Select } from \"antd\";\nimport React, { FC, useEffect, useState, useContext } from \"react\";\nimport ArtistService from \"../services/artistService\";\nimport AlbumsService from \"../services/albumsService\";\nimport { userContext } from \"../utils/types\";\n\ntype Song = {\n  id: number;\n  duration?: string;\n  name?: string;\n  artist?: Artist;\n  albums?: Album[];\n};\n\ntype Album = {\n  id: number;\n  name?: string;\n  pictureUri?: string;\n  artist?: Artist;\n  songs?: Song;\n  releaseDate?: string;\n};\n\ntype Artist = {\n  id?: number;\n  name?: string;\n  imageUri?: string;\n  albums?: Album;\n};\n\nconst CreateArtist: FC = () => {\n  const [albums, setAlbums] = useState<Album[]>([]);\n  const [newArtist, setNewArtist] = useState<Artist>();\n  const [ready, setReady] = useState<boolean>(false);\n  const { userId, admin, token } = useContext(userContext);\n\n  useEffect(() => {\n    AlbumsService.getAlbums().then((res) => {\n      const albums = res.data;\n      setAlbums(albums);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (ready) {\n      ArtistService.createArtist(newArtist, token);\n      setNewArtist(undefined);\n      setReady(false);\n    }\n  }, [admin, userId, newArtist, ready, token]);\n\n  function handleChange(value: any) {\n    setNewArtist({\n      albums: { id: value },\n    });\n  }\n\n  return (\n    <Form\n      name=\"basic\"\n      onFinish={(e) => {\n        setNewArtist({\n          ...newArtist,\n          name: e.name,\n          imageUri: e.imageUri,\n        });\n        setReady(true);\n      }}\n    >\n      <Form.Item\n        label=\"Nom de l'artiste\"\n        name=\"name\"\n        rules={[{ required: true, message: \"Nom de l'artiste\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Lien vers l'image\"\n        name=\"imageUri\"\n        rules={[{ required: true, message: \"Lien vers l'image\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item label=\"Album\">\n        <Select onChange={handleChange}>\n          {albums.map((album, i) => (\n            <Select.Option key={i} value={album.id}>\n              {album.name}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\n          Ajouter\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default CreateArtist;\n"]},"metadata":{},"sourceType":"module"}